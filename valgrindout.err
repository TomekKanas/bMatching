[tkanas@localhost release]$ valgrind ./adorators 4 ../tests/road_PA.txt 11
==3413== Memcheck, a memory error detector
==3413== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==3413== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==3413== Command: ./adorators 4 ../tests/road_PA.txt 11
==3413== 
 1088091
 7910
 3
4572758
 1088091
 17
4587598
 1088091
==3413== Invalid read of size 8
==3413==    at 0x423376: last(int, int) (adorators.cpp:42)
==3413==    by 0x423715: find_edge(int, int) (adorators.cpp:69)
==3413==    by 0x423905: suitor(std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> >&, int) (adorators.cpp:89)
==3413==    by 0x424399: main (adorators.cpp:187)
==3413==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3413== 
==3413== 
==3413== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==3413==  Access not within mapped region at address 0x0
==3413==    at 0x423376: last(int, int) (adorators.cpp:42)
==3413==    by 0x423715: find_edge(int, int) (adorators.cpp:69)
==3413==    by 0x423905: suitor(std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> >&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> >&, int) (adorators.cpp:89)
==3413==    by 0x424399: main (adorators.cpp:187)
==3413==  If you believe this happened as a result of a stack
==3413==  overflow in your program's main thread (unlikely but
==3413==  possible), you can try to increase the size of the
==3413==  main thread stack using the --main-stacksize= flag.
==3413==  The main thread stack size used in this run was 8388608.
==3413== 
==3413== HEAP SUMMARY:
==3413==     in use at exit: 388,984,266 bytes in 3,264,305 blocks
==3413==   total heap usage: 16,858,671 allocs, 13,594,366 frees, 1,157,398,739 bytes allocated
==3413== 
==3413== LEAK SUMMARY:
==3413==    definitely lost: 0 bytes in 0 blocks
==3413==    indirectly lost: 0 bytes in 0 blocks
==3413==      possibly lost: 864 bytes in 3 blocks
==3413==    still reachable: 388,983,402 bytes in 3,264,302 blocks
==3413==         suppressed: 0 bytes in 0 blocks
==3413== Rerun with --leak-check=full to see details of leaked memory
==3413== 
==3413== For counts of detected and suppressed errors, rerun with: -v
==3413== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Segmentation fault (zrzut pamiÄ™ci)

